{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOEbE5Z5hc1d0kUl6smlMf+",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/CarlosSilva59/Projeto-Imers-o-aula-04/blob/main/Projeto%20Imers%C3%A3o%20aula%2004\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Cv8tHvF5f9sB"
      },
      "outputs": [],
      "source": [
        "import streamlit as st\n",
        "import pandas as pd\n",
        "from google.cloud import storage\n",
        "from io import BytesIO\n",
        "import base64\n",
        "\n",
        "def salvar_imagem_no_cloud_storage(imagem, tipo_doacao, quantidade, bloco_armazenamento):\n",
        "    \"\"\"\n",
        "    Salva a imagem no Cloud Storage e retorna a URL pública da imagem.\n",
        "\n",
        "    Args:\n",
        "        imagem (UploadedFile): Objeto de imagem carregada pelo usuário.\n",
        "        tipo_doacao (str): Tipo de doação.\n",
        "        quantidade (int): Quantidade de doação.\n",
        "        bloco_armazenamento (str): Bloco de armazenamento.\n",
        "\n",
        "    Returns:\n",
        "        str: URL pública da imagem salva no Cloud Storage.\n",
        "    \"\"\"\n",
        "    try:\n",
        "        # Convertendo a imagem para base64\n",
        "        buffer = BytesIO()\n",
        "        imagem.readinto(buffer)\n",
        "        encoded_image = base64.b64encode(buffer.getvalue()).decode()\n",
        "\n",
        "        # Salvando a imagem no Cloud Storage\n",
        "        storage_client = storage.Client()\n",
        "        bucket = storage_client.get_bucket(\"seu-bucket-do-google-cloud-storage\")\n",
        "        image_name = f\"{tipo_doacao}-{quantidade}-{bloco_armazenamento}.jpg\"\n",
        "        blob = bucket.blob(image_name)\n",
        "        blob.upload_from_string(encoded_image, content_type='image/jpeg')  # Especificando o tipo de conteúdo\n",
        "        blob.make_public()  # Tornando a imagem pública\n",
        "        blob.upload_from_string(encoded_image, options={\"\"})\n",
        "\n",
        "        # Retornando a URL pública da imagem\n",
        "        return blob.public_url"
      ]
    }
  ]
}